{"version":3,"sources":["component/navbartop.js","component/table.js","services/allservices.js","component/list_user.js","component/adduser.js","component/edituser.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarPage","state","isOpen","menuname","toggleCollapse","setState","onClickACtive","ev","console","log","innerText","target","color","dark","expand","className","onClick","this","id","navbar","left","active","to","Component","TablePage","props","data","maxHeight","responsive","striped","columns","column","rows","allservices","url","json","setdata","a","fetch","RQ","amount","Feachdata","List_user","getcolumn","res","$column","forEach","el","Object","keys","filter","v","map","val","i","then","hasOwnProperty","Adduser","fname","lname","email","city","zip","submitHandler","event","preventDefault","changeHandler","name","value","class","style","padding","onSubmit","noValidate","md","htmlFor","onChange","type","placeholder","required","Edituser","App","exact","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.86fc5c79.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBFormInline,\r\n  MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBLink,MDBNav\r\n} from \"mdbreact\";\r\nimport { BrowserRouter as Router, Route, Link,NavLink   } from 'react-router-dom';\r\n\r\nclass NavbarPage extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    menuname:null\r\n  };\r\n\r\n  toggleCollapse = () => {\r\n    this.setState({ isOpen: !this.state.isOpen \r\n                      });\r\n  }\r\n  onClickACtive = (ev) => {\r\n    console.log(ev)\r\n    let {innerText} = ev.target;\r\n    this.setState({menuname:innerText})\r\n \r\n  }\r\n\r\n  render() {\r\n    return (\r\n    \r\n        <MDBNavbar color=\"indigo\" dark expand=\"md\" className=\"mb-4\">\r\n          <MDBNavbarBrand>\r\n            <strong className=\"white-text\">Navbar</strong>\r\n          </MDBNavbarBrand>\r\n          <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n          <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar className=\"justify-content-center\">\r\n          <MDBNavbarNav  className=\"font-weight-bold ml-auto mr-auto\" left>\r\n\r\n              <MDBNavItem   active={this.state.menuname === 'Home'}  onClick={this.onClickACtive}>\r\n          \r\n                <NavLink    to=\"/home\"  className=\"nav-link text-white active\">Home</NavLink>\r\n              </MDBNavItem>\r\n\r\n              <MDBNavItem  active={this.state.menuname === 'ListUser'} onClick={this.onClickACtive}>\r\n              <Link to=\"/listuser\" className=\"nav-link text-white\">ListUser</Link>\r\n              </MDBNavItem>\r\n\r\n              <MDBNavItem  active={this.state.menuname === 'AddUser'} onClick={this.onClickACtive}>\r\n              <NavLink to='/adduser' className=\"nav-link text-white\">AddUser</NavLink>\r\n              </MDBNavItem>\r\n\r\n              <MDBNavItem  active={this.state.menuname === 'EditUser'} onClick={this.onClickACtive}>\r\n              <NavLink to='/edituser' className=\"nav-link text-white\">EditUser</NavLink>\r\n              </MDBNavItem>\r\n\r\n             \r\n\r\n            </MDBNavbarNav>\r\n\r\n          </MDBCollapse>\r\n        </MDBNavbar>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;","import React from 'react';\r\nimport { MDBContainer, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\n\r\nconst TablePage = (props) => {\r\n  const {data} = props;\r\n  console.log(data)\r\n\r\n\r\nreturn (\r\n\r\n\r\n\r\n  \r\n  <MDBTable  maxHeight=\"70vh\"  responsive striped >\r\n    <MDBTableHead columns={data.column} />\r\n    <MDBTableBody rows={data.rows} />\r\n  </MDBTable>\r\n\r\n \r\n\r\n);\r\n};\r\n\r\nexport default TablePage;","import React, { Component } from 'react'\r\n\r\nexport default class allservices extends Component {\r\n   constructor(props){\r\n       super(props)\r\n     \r\n   }\r\n\r\n   async Feachdata(url,json,setdata){\r\n    const RQ =  await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n    // let res = await RQ.json();\r\n   \r\n    return RQ\r\n}\r\n FactCAT(amount){\r\n  return  this.Feachdata(amount);\r\n}\r\n\r\n  }","import { Route } from 'react-router-dom'\r\nimport React, { Component } from 'react'\r\nimport TablePage from './table';\r\nimport allservices from '../services/allservices'\r\n\r\nclass List_user extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n    this.state = {\r\n        data: {}\r\n    }\r\n    this.allservices = new allservices()\r\n        // console.log(  this.allservices.FactCAT(2))\r\n    }\r\n    getcolumn = (res) => {\r\n        let $column;\r\n        res.forEach(el => {\r\n            delete el[\"address\"]\r\n            delete el[\"company\"]\r\n        });\r\n        const newData = Object.keys(res[0])\r\n\r\n        $column = newData.filter((v) => v != \"address\" && v != \"company\").map((val, i) => {\r\n            return {\r\n                \"label\": val,\r\n                \"field\": val,\r\n                \"minimal\": \"sm\"\r\n            }\r\n        }\r\n\r\n        );\r\n        this.setState({\r\n            data: {\r\n                column: $column,\r\n                rows: res\r\n            }\r\n\r\n        });\r\n\r\n\r\n    }\r\n\r\n   componentDidMount(){\r\n    // console.log(  this.allservices)\r\n    const RQ =  this.allservices.Feachdata();\r\n    RQ.then((data) => { return data.json() }).then((data) => {\r\n      this.getcolumn(data)\r\n    })\r\n   }\r\n    render() {\r\n      \r\n        let { data } = this.state\r\n    \r\n        let isNull = data.hasOwnProperty('column');\r\n\r\n        return (\r\n            isNull && <TablePage data={data} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default List_user\r\n","\r\n\r\nimport React, { Component } from 'react'\r\nimport { MDBRow, MDBCol, MDBJumbotron } from \"mdbreact\";\r\nexport default class Adduser extends Component {\r\n    state = {\r\n        fname: \"Mark\",\r\n        lname: \"Otto\",\r\n        email: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\"\r\n      };\r\n    \r\n      submitHandler = event => {\r\n        event.preventDefault();\r\n        event.target.className += \" was-validated\";\r\n      };\r\n    \r\n      changeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n      };\r\n    render() {\r\n        return (\r\n            <div class=\"d-flex justify-content-center\">\r\n                 <MDBJumbotron style={{ padding: '20px 20px' }}>\r\n                 <h4 className=\" display-5\">Created User</h4>\r\n        <form\r\n          className=\"needs-validation \"\r\n          onSubmit={this.submitHandler}\r\n          noValidate\r\n        >\r\n\r\n          <MDBRow>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n              <label\r\n                htmlFor=\"defaultFormRegisterNameEx\"\r\n                className=\"grey-text\"\r\n              >\r\n                First name\r\n              </label>\r\n              <input\r\n                value={this.state.fname}\r\n                name=\"fname\"\r\n                onChange={this.changeHandler}\r\n                type=\"text\"\r\n                id=\"defaultFormRegisterNameEx\"\r\n                className=\"form-control\"\r\n                placeholder=\"First name\"\r\n                required\r\n              />\r\n              <div className=\"valid-feedback\">Looks good!</div>\r\n            </MDBCol>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n              <label\r\n                htmlFor=\"defaultFormRegisterEmailEx2\"\r\n                className=\"grey-text\"\r\n              >\r\n                Last name\r\n              </label>\r\n              <input\r\n                value={this.state.lname}\r\n                name=\"lname\"\r\n                onChange={this.changeHandler}\r\n                type=\"text\"\r\n                id=\"defaultFormRegisterEmailEx2\"\r\n                className=\"form-control\"\r\n                placeholder=\"Last name\"\r\n                required\r\n              />\r\n              <div className=\"valid-feedback\">Looks good!</div>\r\n            </MDBCol>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n              <label\r\n                htmlFor=\"defaultFormRegisterConfirmEx3\"\r\n                className=\"grey-text\"\r\n              >\r\n                Email\r\n              </label>\r\n              <input\r\n                value={this.state.email}\r\n                onChange={this.changeHandler}\r\n                type=\"email\"\r\n                id=\"defaultFormRegisterConfirmEx3\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                placeholder=\"Your Email address\"\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </small>\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <MDBRow>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n              <label\r\n                htmlFor=\"defaultFormRegisterPasswordEx4\"\r\n                className=\"grey-text\"\r\n              >\r\n                City\r\n              </label>\r\n              <input\r\n                value={this.state.city}\r\n                onChange={this.changeHandler}\r\n                type=\"text\"\r\n                id=\"defaultFormRegisterPasswordEx4\"\r\n                className=\"form-control\"\r\n                name=\"city\"\r\n                placeholder=\"City\"\r\n                required\r\n              />\r\n              <div className=\"invalid-feedback\">\r\n                Please provide a valid city.\r\n              </div>\r\n              <div className=\"valid-feedback\">Looks good!</div>\r\n            </MDBCol>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n              <label\r\n                htmlFor=\"defaultFormRegisterPasswordEx4\"\r\n                className=\"grey-text\"\r\n              >\r\n                State\r\n              </label>\r\n              <input\r\n                value={this.state.state}\r\n                onChange={this.changeHandler}\r\n                type=\"text\"\r\n                id=\"defaultFormRegisterPasswordEx4\"\r\n                className=\"form-control\"\r\n                name=\"state\"\r\n                placeholder=\"State\"\r\n                required\r\n              />\r\n              <div className=\"invalid-feedback\">\r\n                Please provide a valid state.\r\n              </div>\r\n              <div className=\"valid-feedback\">Looks good!</div>\r\n            </MDBCol>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n              <label\r\n                htmlFor=\"defaultFormRegisterPasswordEx4\"\r\n                className=\"grey-text\"\r\n              >\r\n                Zip\r\n              </label>\r\n              <input\r\n                value={this.state.zip}\r\n                onChange={this.changeHandler}\r\n                type=\"text\"\r\n                id=\"defaultFormRegisterPasswordEx4\"\r\n                className=\"form-control\"\r\n                name=\"zip\"\r\n                placeholder=\"Zip\"\r\n                required\r\n              />\r\n              <div className=\"invalid-feedback\">\r\n                Please provide a valid zip.\r\n              </div>\r\n              <div className=\"valid-feedback\">Looks good!</div>\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <MDBCol md=\"4\" className=\"mb-3\">\r\n            <div className=\"custom-control custom-checkbox pl-3\">\r\n              <input\r\n                className=\"custom-control-input\"\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                id=\"invalidCheck\"\r\n                required\r\n              />\r\n              <label className=\"custom-control-label\" htmlFor=\"invalidCheck\">\r\n                Agree to terms and conditions\r\n              </label>\r\n              <div className=\"invalid-feedback\">\r\n                You must agree before submitting.\r\n              </div>\r\n            </div>\r\n          </MDBCol>\r\n          <button type=\"submit\" class=\"btn btn-sm btn-primary\">Submit Form</button>\r\n         \r\n          \r\n        </form>\r\n        </MDBJumbotron>\r\n      </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Edituser() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","\nimport React, { useEffect, useState } from 'react';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport NavbarPage from './component/navbartop';\nimport { MDBBox, MDBContainer, MDBRow, MDBCol } from 'mdbreact';\nimport List_user from './component/list_user'\nimport allservices from './services/allservices'\nimport { prettyDOM } from '@testing-library/dom';\nimport { BrowserRouter as Router, Route, Link, NavLink, Switch ,Redirect} from 'react-router-dom';\nimport Adduser from './component/adduser'\nimport Edituser from './component/edituser'\n\n\nconst App = () => {\n  return (\n\n\n    <div className=\"App\">\n      <Router>\n        <NavbarPage />\n        <MDBContainer  >\n\n\n\n            <Switch>\n              <Route exact path=\"/home\">\n\n                  home\n                {/* <List_user /> */}\n\n              </Route>\n              <Route path=\"/listuser\">\n\n                listuser\n                <List_user />\n\n              </Route>\n\n              <Route  path=\"/adduser\">\n\n             \n                <Adduser />\n\n              </Route>\n\n              <Route  path=\"/edituser\">\n\n                edituser\n                <Edituser />\n\n              </Route>\n              <Route  path=\"*\">\n\n                  home\n               \n                  <Redirect to=\"/home\" />\n\n                  </Route>\n            </Switch>\n\n\n\n\n\n        \n\n\n\n\n        </MDBContainer>\n      </Router>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\n\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n   \n  </BrowserRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}