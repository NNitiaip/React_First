{"version":3,"sources":["component/table.js","component/navbartop.js","component/SideNavPage.js","services/catfact.js","App.js","reportWebVitals.js","index.js"],"names":["TablePage","props","data","maxHeight","responsive","striped","columns","rows","NavbarPage","state","isOpen","toggleCollapse","setState","color","dark","expand","className","onClick","this","id","navbar","left","active","Component","SelectPage","console","log","cssx","FIELD","value","amount","a","fetch","RQ","json","res","FactCAT","Getdata","App","useState","Dataidp","Setdataidp","datatable","Setdatatable","$column","serveice","arr","newData","Object","keys","map","val","i","label","field","minimal","useEffect","fluid","size","fuc","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c4d46c1.chunk.js","sourcesContent":["import React from 'react';\r\nimport { MDBContainer, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\n\r\nconst TablePage = (props) => {\r\n  const {data} = props;\r\nconst datax = \r\n  data\r\n;\r\n\r\nreturn (\r\n\r\n\r\n\r\n  \r\n  <MDBTable  maxHeight=\"70vh\"  responsive striped >\r\n    <MDBTableHead columns={data.columns} />\r\n    <MDBTableBody rows={data.rows} />\r\n  </MDBTable>\r\n\r\n \r\n\r\n);\r\n};\r\n\r\nexport default TablePage;","import React, { Component } from \"react\";\r\nimport { MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBDropdown,\r\nMDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBIcon } from \"mdbreact\";\r\n\r\n\r\nclass NavbarPage extends Component {\r\nstate = {\r\n  isOpen: false\r\n};\r\n\r\ntoggleCollapse = () => {\r\n  this.setState({ isOpen: !this.state.isOpen });\r\n}\r\n\r\nrender() {\r\n  return (\r\n  \r\n      <MDBNavbar color=\"default-color\" dark expand=\"md\" className=\"mb-5\">\r\n        <MDBNavbarBrand>\r\n          <strong className=\"white-text\">Navbar</strong>\r\n        </MDBNavbarBrand>\r\n        <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n\r\n        <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar>\r\n          \r\n          <MDBNavbarNav left>\r\n            <MDBNavItem active>\r\n              \r\n            </MDBNavItem>\r\n          \r\n         \r\n\r\n          </MDBNavbarNav>\r\n\r\n        \r\n        </MDBCollapse>\r\n     \r\n      </MDBNavbar>\r\n  \r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;","import React, { Component, useEffect } from 'react';\r\n\r\nclass SelectPage extends Component {\r\n    constructor(props){\r\n        super(props)\r\n        console.log(props)\r\n        const {cssx,FIELD} = this.props;\r\n    \r\n    }\r\n    \r\n  render () {\r\n    const {cssx,FIELD} = this.props;\r\n   \r\n    return(\r\n      <div className={this.props.cssx ?? ''}>\r\n        <label className=\"d-block text-left font-weight-bold\">{FIELD}</label>\r\n        <select className=\"browser-default custom-select\">\r\n          <option>Choose your option</option>\r\n          <option value=\"1\">Option 1</option>\r\n          <option value=\"2\">Option 2</option>\r\n          <option value=\"3\">Option 3</option>\r\n        </select>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectPage;","import react from 'react'\r\nasync function Getdata(amount){\r\n    const RQ =  await fetch(\"testjson.json\");\r\n\r\n    let res = await RQ.json();\r\n   \r\n \r\n    return res\r\n}\r\n\r\nfunction FactCAT(amount){\r\n  return  Getdata(amount);\r\n}\r\n\r\nexport default FactCAT","\nimport './App.css';\nimport React, { useEffect, useState } from 'react';\nimport TablePage from './component/table';\nimport ReactDOM from 'react-dom';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\nimport NavbarPage from './component/navbartop';\nimport { MDBBox, MDBContainer, MDBRow, MDBCol } from 'mdbreact';\nimport SelectPage from './component/SideNavPage';\nimport serveice from './services/catfact'\n\n\n\n\nconst App = () => {\n  const [Dataidp, Setdataidp] = useState([]);\n  const [datatable, Setdatatable] = useState({});\n  let $column = [];\n\n  const Getdata = async () => {\n    let arr = await serveice(10);\n    // arr.data.length = 10\n    Setdataidp(arr.data);\n    // console.log(Dataidp)\n    const newData = Object.keys(arr.data[0])\n\n    $column = newData.map((val, i) => (\n      {\n        label: val,\n        field: val,\n        minimal: \"sm\"\n\n      }\n    )\n    )\n    Setdatatable({\n      columns: $column,\n      rows: arr.data,\n    })\n\n  }\n\n  useEffect(() => {\n    Getdata()\n    return () => {\n\n    }\n  }, [])\n  return (\n\n\n    <div className=\"App\">\n      <NavbarPage />\n\n      <MDBContainer fluid >\n        <MDBRow>\n\n          <MDBCol size=\"12\" className=\"mb-4\">\n            <MDBRow>\n              <MDBCol className=\"px-2\">\n                <SelectPage FIELD=\"YEAR\" data={[...Dataidp]} />\n              </MDBCol>\n\n              <MDBCol className=\"px-2\">\n                <SelectPage FIELD=\"NAME\" data={[...Dataidp]} />\n              </MDBCol>\n\n              <MDBCol className=\"px-2\">\n                <SelectPage FIELD=\"LAB CODE\" data={[\"TOP\", \"TLB\", \"TPX\"]} />\n              </MDBCol>\n\n              <MDBCol className=\"px-2\">\n                <SelectPage FIELD=\"CATEGORY\"    data={Dataidp} />\n              </MDBCol>\n              <MDBCol className=\"px-2\">\n                <SelectPage FIELD=\"COURSE NAME\" data={Dataidp} />\n              </MDBCol>\n\n              <MDBCol className=\"px-2\">\n                <SelectPage FIELD=\"COURSE TYPE\" data={Dataidp} />\n              </MDBCol>\n\n\n\n            </MDBRow>\n\n          </MDBCol>\n          <MDBCol>\n            <TablePage data={datatable} fuc={Setdatatable} />\n          </MDBCol>\n\n\n\n        </MDBRow>\n\n\n\n\n      </MDBContainer>\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n   \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}