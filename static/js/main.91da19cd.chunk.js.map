{"version":3,"sources":["component/navbartop.js","component/table.js","services/allservices.js","component/list_user.js","component/adduser.js","component/edituser.js","App.js","reportWebVitals.js","index.js"],"names":["NavbarPage","state","isOpen","menuname","toggleCollapse","setState","onClickACtive","ev","console","log","innerText","target","color","dark","expand","className","onClick","this","id","navbar","left","active","to","Component","TablePage","props","data","maxHeight","responsive","striped","columns","column","rows","url","json","setdata","a","fetch","RQ","res","List_user","useState","stage","setStage","useEffect","Allservices","Feachdata","getcolumn","$column","forEach","el","Object","keys","filter","v","map","val","i","Adduser","fname","lname","email","city","zip","submitHandler","event","preventDefault","changeHandler","name","value","style","padding","onSubmit","noValidate","md","htmlFor","onChange","type","placeholder","required","Edituser","window","addEventListener","setTimeout","location","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.91da19cd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  MDBNavbar, MDBNavbarBrand, MDBNavbarNav, MDBNavItem, MDBNavLink, MDBNavbarToggler, MDBCollapse, MDBFormInline,\r\n  MDBDropdown, MDBDropdownToggle, MDBDropdownMenu, MDBDropdownItem, MDBLink,MDBNav\r\n} from \"mdbreact\";\r\nimport { BrowserRouter as Router, Route, Link,NavLink   } from 'react-router-dom';\r\n\r\nclass NavbarPage extends Component {\r\n  state = {\r\n    isOpen: false,\r\n    menuname:null\r\n  };\r\n\r\n  toggleCollapse = () => {\r\n    this.setState({ isOpen: !this.state.isOpen \r\n                      });\r\n  }\r\n  onClickACtive = (ev) => {\r\n    console.log(ev)\r\n    let {innerText} = ev.target;\r\n    this.setState({menuname:innerText})\r\n \r\n  }\r\n\r\n  render() {\r\n    return (\r\n    \r\n        <MDBNavbar color=\"indigo\" dark expand=\"md\" className=\"mb-4\">\r\n          <MDBNavbarBrand>\r\n            <strong className=\"white-text\">Navbar</strong>\r\n          </MDBNavbarBrand>\r\n          <MDBNavbarToggler onClick={this.toggleCollapse} />\r\n          <MDBCollapse id=\"navbarCollapse3\" isOpen={this.state.isOpen} navbar className=\"justify-content-center\">\r\n          <MDBNavbarNav  className=\"font-weight-bold ml-auto mr-auto\" left>\r\n\r\n              <MDBNavItem   active={this.state.menuname === 'Home'}  onClick={this.onClickACtive}>\r\n          \r\n                <NavLink    to=\"/home\"  className=\"nav-link text-white active\">Home</NavLink>\r\n              </MDBNavItem>\r\n\r\n              <MDBNavItem  active={this.state.menuname === 'ListUser'} onClick={this.onClickACtive}>\r\n              <Link to=\"/listuser\" className=\"nav-link text-white\">ListUser</Link>\r\n              </MDBNavItem>\r\n\r\n              <MDBNavItem  active={this.state.menuname === 'AddUser'} onClick={this.onClickACtive}>\r\n              <NavLink to='/adduser' className=\"nav-link text-white\">AddUser</NavLink>\r\n              </MDBNavItem>\r\n\r\n              <MDBNavItem  active={this.state.menuname === 'EditUser'} onClick={this.onClickACtive}>\r\n              <NavLink to='/edituser' className=\"nav-link text-white\">EditUser</NavLink>\r\n              </MDBNavItem>\r\n\r\n             \r\n\r\n            </MDBNavbarNav>\r\n\r\n          </MDBCollapse>\r\n        </MDBNavbar>\r\n    \r\n    );\r\n  }\r\n}\r\n\r\nexport default NavbarPage;","import React from 'react';\r\nimport { MDBContainer, MDBTable, MDBTableBody, MDBTableHead } from 'mdbreact';\r\n\r\nconst TablePage = (props) => {\r\n  const { data } = props;\r\n  console.log(data)\r\n\r\n\r\n  return (\r\n\r\n    <MDBTable maxHeight=\"70vh\" responsive striped >\r\n      xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx\r\n      <MDBTableHead columns={data.column} />\r\n      <MDBTableBody rows={data.rows} />\r\n    </MDBTable>\r\n\r\n  );\r\n};\r\n\r\nexport default TablePage;","class Allservices {\r\n  // constructor() {}\r\n\r\n  async Feachdata(url, json, setdata) {\r\n    const RQ = await fetch(\"https://jsonplaceholder.typicode.com/users\");\r\n    let res = await RQ.json();\r\n\r\n    return res;\r\n  }\r\n}\r\nexport default  new Allservices();\r\n","import { Route } from 'react-router-dom'\r\nimport React, { useEffect, useState } from 'react'\r\nimport TablePage from './table';\r\nimport Allservices from '../services/allservices'\r\n\r\n\r\n\r\nexport default function List_user() {\r\n    const [stage, setStage] = useState([]);\r\n    useEffect(() => {\r\n\r\n        (async () => {\r\n            let data = await Allservices.Feachdata()\r\n            getcolumn(data)\r\n        })()\r\n\r\n    }, [])\r\n    const getcolumn = (res) => {\r\n        let $column;\r\n        res.forEach(el => {\r\n            delete el[\"address\"]\r\n            delete el[\"company\"]\r\n        });\r\n        const newData = Object.keys(res[0])\r\n\r\n        $column = newData.filter((v) => v != \"address\" && v != \"company\").map((val, i) => {\r\n            return {\r\n                \"label\": val,\r\n                \"field\": val,\r\n                \"minimal\": \"sm\"\r\n            }\r\n        }\r\n\r\n        );\r\n        setStage({\r\n            data: {\r\n                column: $column,\r\n                rows: res\r\n            }\r\n\r\n        });\r\n    }\r\n\r\n    if (!stage) { return <></> }\r\n    return (\r\n        <TablePage data={stage} />\r\n\r\n    )\r\n}\r\n\r\n","\r\n\r\nimport React, { Component } from 'react'\r\nimport { MDBRow, MDBCol, MDBJumbotron } from \"mdbreact\";\r\nexport default class Adduser extends Component {\r\n    state = {\r\n        fname: \"Mark\",\r\n        lname: \"Otto\",\r\n        email: \"\",\r\n        city: \"\",\r\n        state: \"\",\r\n        zip: \"\"\r\n      };\r\n    \r\n      submitHandler = event => {\r\n        event.preventDefault();\r\n        let arr = {...this.state};\r\n        // console.log(event.target.fname.value)\r\n        event.target.className += \" was-validated\";\r\n      };\r\n    \r\n      changeHandler = event => {\r\n        this.setState({ [event.target.name]: event.target.value });\r\n      };\r\n    render() {\r\n        return (\r\n            <div className=\"d-flex justify-content-center\">\r\n                 <MDBJumbotron style={{ padding: '20px 20px' }}>\r\n                 <h4 className=\" display-5\">Created User</h4>\r\n        <form\r\n          className=\"needs-validation \"\r\n          onSubmit={this.submitHandler}\r\n          noValidate\r\n        >\r\n\r\n          <MDBRow>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n              <label\r\n                htmlFor=\"defaultFormRegisterNameEx\"\r\n                className=\"grey-text\"\r\n              >\r\n                First name\r\n              </label>\r\n              <input\r\n                value={this.state.fname}\r\n                name=\"fname\"\r\n                onChange={this.changeHandler}\r\n                type=\"text\"\r\n                id=\"defaultFormRegisterNameEx\"\r\n                className=\"form-control\"\r\n                placeholder=\"First name\"\r\n                required\r\n              />\r\n              <div className=\"valid-feedback\">Looks good!</div>\r\n            </MDBCol>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n              <label\r\n                htmlFor=\"defaultFormRegisterEmailEx2\"\r\n                className=\"grey-text\"\r\n              >\r\n                Last name\r\n              </label>\r\n              <input\r\n                value={this.state.lname}\r\n                name=\"lname\"\r\n                onChange={this.changeHandler}\r\n                type=\"text\"\r\n                id=\"defaultFormRegisterEmailEx2\"\r\n                className=\"form-control\"\r\n                placeholder=\"Last name\"\r\n                required\r\n              />\r\n              <div className=\"valid-feedback\">Looks good!</div>\r\n            </MDBCol>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n              <label\r\n                htmlFor=\"defaultFormRegisterConfirmEx3\"\r\n                className=\"grey-text\"\r\n              >\r\n                Email\r\n              </label>\r\n              <input\r\n                value={this.state.email}\r\n                onChange={this.changeHandler}\r\n                type=\"email\"\r\n                id=\"defaultFormRegisterConfirmEx3\"\r\n                className=\"form-control\"\r\n                name=\"email\"\r\n                placeholder=\"Your Email address\"\r\n              />\r\n              <small id=\"emailHelp\" className=\"form-text text-muted\">\r\n                We'll never share your email with anyone else.\r\n              </small>\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <MDBRow>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n              <label\r\n                htmlFor=\"defaultFormRegisterPasswordEx4\"\r\n                className=\"grey-text\"\r\n              >\r\n                City\r\n              </label>\r\n              <input\r\n                value={this.state.city}\r\n                onChange={this.changeHandler}\r\n                type=\"text\"\r\n                id=\"defaultFormRegisterPasswordEx4\"\r\n                className=\"form-control\"\r\n                name=\"city\"\r\n                placeholder=\"City\"\r\n                required\r\n              />\r\n              <div className=\"invalid-feedback\">\r\n                Please provide a valid city.\r\n              </div>\r\n              <div className=\"valid-feedback\">Looks good!</div>\r\n            </MDBCol>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n              <label\r\n                htmlFor=\"defaultFormRegisterPasswordEx4\"\r\n                className=\"grey-text\"\r\n              >\r\n                State\r\n              </label>\r\n              <input\r\n                value={this.state.state}\r\n                onChange={this.changeHandler}\r\n                type=\"text\"\r\n                id=\"defaultFormRegisterPasswordEx4\"\r\n                className=\"form-control\"\r\n                name=\"state\"\r\n                placeholder=\"State\"\r\n                required\r\n              />\r\n              <div className=\"invalid-feedback\">\r\n                Please provide a valid state.\r\n              </div>\r\n              <div className=\"valid-feedback\">Looks good!</div>\r\n            </MDBCol>\r\n            <MDBCol md=\"4\" className=\"mb-3\">\r\n              <label\r\n                htmlFor=\"defaultFormRegisterPasswordEx4\"\r\n                className=\"grey-text\"\r\n              >\r\n                Zip\r\n              </label>\r\n              <input\r\n                value={this.state.zip}\r\n                onChange={this.changeHandler}\r\n                type=\"text\"\r\n                id=\"defaultFormRegisterPasswordEx4\"\r\n                className=\"form-control\"\r\n                name=\"zip\"\r\n                placeholder=\"Zip\"\r\n                required\r\n              />\r\n              <div className=\"invalid-feedback\">\r\n                Please provide a valid zip.\r\n              </div>\r\n              <div className=\"valid-feedback\">Looks good!</div>\r\n            </MDBCol>\r\n          </MDBRow>\r\n          <MDBCol md=\"4\" className=\"mb-3\">\r\n            <div className=\"custom-control custom-checkbox pl-3\">\r\n              <input\r\n                className=\"custom-control-input\"\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                id=\"invalidCheck\"\r\n                required\r\n              />\r\n              <label className=\"custom-control-label\" htmlFor=\"invalidCheck\">\r\n                Agree to terms and conditions\r\n              </label>\r\n              <div className=\"invalid-feedback\">\r\n                You must agree before submitting.\r\n              </div>\r\n            </div>\r\n          </MDBCol>\r\n          <button type=\"submit\" className=\"btn btn-sm btn-primary\">Submit Form</button>\r\n         \r\n          \r\n        </form>\r\n        </MDBJumbotron>\r\n      </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\n\r\nexport default function Edituser() {\r\n    return (\r\n        <div>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\r\nimport \"bootstrap-css-only/css/bootstrap.min.css\";\r\nimport \"mdbreact/dist/css/mdb.css\";\r\nimport NavbarPage from \"./component/navbartop\";\r\nimport { MDBBox, MDBContainer, MDBRow, MDBCol } from \"mdbreact\";\r\nimport List_user from \"./component/list_user\";\r\nimport { prettyDOM } from \"@testing-library/dom\";\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  NavLink,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport Adduser from \"./component/adduser\";\r\nimport Edituser from \"./component/edituser\";\r\n\r\nconst pageLoad = () => {\r\n  setTimeout(function () { window.location = \"https://api-thaioilhub.thaioilgroup.com/api/application/donate/apk\"; }, 1000);\r\n  window.location = \"donate://donate/\";\r\n}\r\nwindow.addEventListener(\"load\",pageLoad);\r\nconst App = () => {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <NavbarPage />\r\n        <MDBContainer>\r\n          <Switch>\r\n            <Route exact path=\"/home\">\r\n              home\r\n              {/* <List_user /> */}\r\n            </Route>\r\n            <Route path=\"/listuser\">\r\n              <List_user />\r\n            </Route>\r\n            <Route path=\"/adduser\">\r\n              <Adduser />\r\n            </Route>\r\n            <Route path=\"/edituser\">\r\n              edituser\r\n              <Edituser />\r\n            </Route>\r\n            {/* //404 */}\r\n            <Route path=\"*\">\r\n              home\r\n              <Redirect to=\"/home\" />\r\n            </Route>\r\n          </Switch>\r\n        </MDBContainer>\r\n      </Router>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\n\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n   \r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}